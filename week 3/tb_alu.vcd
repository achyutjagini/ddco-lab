$date
	Thu Nov  5 18:04:45 2020
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module tb $end
$var wire 1 ! cout $end
$var wire 16 " o [15:0] $end
$var reg 1 # clk $end
$var reg 16 $ i0 [15:0] $end
$var reg 16 % i1 [15:0] $end
$var reg 2 & op [1:0] $end
$var reg 1 ' reset $end
$var integer 32 ( i [31:0] $end
$scope module alu_0 $end
$var wire 1 ! cout $end
$var wire 16 ) i0 [15:0] $end
$var wire 16 * i1 [15:0] $end
$var wire 2 + op [1:0] $end
$var wire 16 , o [15:0] $end
$var wire 16 - c [15:0] $end
$scope module _i0 $end
$var wire 1 . cin $end
$var wire 1 / i0 $end
$var wire 1 0 i1 $end
$var wire 2 1 op [1:0] $end
$var wire 1 2 t_sumdiff $end
$var wire 1 3 t_or $end
$var wire 1 4 t_andor $end
$var wire 1 5 t_and $end
$var wire 1 6 o $end
$var wire 1 7 cout $end
$scope module _i0 $end
$var wire 1 8 addsub $end
$var wire 1 . cin $end
$var wire 1 / i0 $end
$var wire 1 0 i1 $end
$var wire 1 2 sumdiff $end
$var wire 1 9 t_addsub $end
$var wire 1 : t_sumdiff $end
$var wire 1 ; t $end
$var wire 1 7 cout $end
$scope module _i0 $end
$var wire 1 . cin $end
$var wire 1 / i0 $end
$var wire 1 < t2 $end
$var wire 1 = t1 $end
$var wire 1 > t0 $end
$var wire 1 : sum $end
$var wire 1 ; i1 $end
$var wire 1 7 cout $end
$scope module _i0 $end
$var wire 1 / i0 $end
$var wire 1 . i2 $end
$var wire 1 ? t $end
$var wire 1 : o $end
$var wire 1 ; i1 $end
$scope module xor2_0 $end
$var wire 1 / i0 $end
$var wire 1 ? o $end
$var wire 1 ; i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 . i0 $end
$var wire 1 ? i1 $end
$var wire 1 : o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 / i0 $end
$var wire 1 > o $end
$var wire 1 ; i1 $end
$upscope $end
$scope module _i2 $end
$var wire 1 . i1 $end
$var wire 1 = o $end
$var wire 1 ; i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 / i0 $end
$var wire 1 . i1 $end
$var wire 1 < o $end
$upscope $end
$scope module _i4 $end
$var wire 1 > i0 $end
$var wire 1 = i1 $end
$var wire 1 < i2 $end
$var wire 1 @ t $end
$var wire 1 7 o $end
$scope module or2_0 $end
$var wire 1 > i0 $end
$var wire 1 = i1 $end
$var wire 1 @ o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 < i0 $end
$var wire 1 @ i1 $end
$var wire 1 7 o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 0 i0 $end
$var wire 1 9 i1 $end
$var wire 1 ; o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 / i0 $end
$var wire 1 0 i1 $end
$var wire 1 5 o $end
$upscope $end
$scope module _i2 $end
$var wire 1 / i0 $end
$var wire 1 0 i1 $end
$var wire 1 3 o $end
$upscope $end
$scope module _i3 $end
$var wire 1 3 i0 $end
$var wire 1 5 i1 $end
$var wire 1 A j $end
$var wire 1 4 o $end
$upscope $end
$scope module _i4 $end
$var wire 1 2 i0 $end
$var wire 1 4 i1 $end
$var wire 1 B j $end
$var wire 1 6 o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 C cin $end
$var wire 1 D i0 $end
$var wire 1 E i1 $end
$var wire 2 F op [1:0] $end
$var wire 1 G t_sumdiff $end
$var wire 1 H t_or $end
$var wire 1 I t_andor $end
$var wire 1 J t_and $end
$var wire 1 K o $end
$var wire 1 L cout $end
$scope module _i0 $end
$var wire 1 M addsub $end
$var wire 1 C cin $end
$var wire 1 D i0 $end
$var wire 1 E i1 $end
$var wire 1 G sumdiff $end
$var wire 1 N t_addsub $end
$var wire 1 O t_sumdiff $end
$var wire 1 P t $end
$var wire 1 L cout $end
$scope module _i0 $end
$var wire 1 C cin $end
$var wire 1 D i0 $end
$var wire 1 Q t2 $end
$var wire 1 R t1 $end
$var wire 1 S t0 $end
$var wire 1 O sum $end
$var wire 1 P i1 $end
$var wire 1 L cout $end
$scope module _i0 $end
$var wire 1 D i0 $end
$var wire 1 C i2 $end
$var wire 1 T t $end
$var wire 1 O o $end
$var wire 1 P i1 $end
$scope module xor2_0 $end
$var wire 1 D i0 $end
$var wire 1 T o $end
$var wire 1 P i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 C i0 $end
$var wire 1 T i1 $end
$var wire 1 O o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 D i0 $end
$var wire 1 S o $end
$var wire 1 P i1 $end
$upscope $end
$scope module _i2 $end
$var wire 1 C i1 $end
$var wire 1 R o $end
$var wire 1 P i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 D i0 $end
$var wire 1 C i1 $end
$var wire 1 Q o $end
$upscope $end
$scope module _i4 $end
$var wire 1 S i0 $end
$var wire 1 R i1 $end
$var wire 1 Q i2 $end
$var wire 1 U t $end
$var wire 1 L o $end
$scope module or2_0 $end
$var wire 1 S i0 $end
$var wire 1 R i1 $end
$var wire 1 U o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 Q i0 $end
$var wire 1 U i1 $end
$var wire 1 L o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 E i0 $end
$var wire 1 N i1 $end
$var wire 1 P o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 D i0 $end
$var wire 1 E i1 $end
$var wire 1 J o $end
$upscope $end
$scope module _i2 $end
$var wire 1 D i0 $end
$var wire 1 E i1 $end
$var wire 1 H o $end
$upscope $end
$scope module _i3 $end
$var wire 1 H i0 $end
$var wire 1 J i1 $end
$var wire 1 V j $end
$var wire 1 I o $end
$upscope $end
$scope module _i4 $end
$var wire 1 G i0 $end
$var wire 1 I i1 $end
$var wire 1 W j $end
$var wire 1 K o $end
$upscope $end
$upscope $end
$scope module _i10 $end
$var wire 1 X cin $end
$var wire 1 Y i0 $end
$var wire 1 Z i1 $end
$var wire 2 [ op [1:0] $end
$var wire 1 \ t_sumdiff $end
$var wire 1 ] t_or $end
$var wire 1 ^ t_andor $end
$var wire 1 _ t_and $end
$var wire 1 ` o $end
$var wire 1 a cout $end
$scope module _i0 $end
$var wire 1 b addsub $end
$var wire 1 X cin $end
$var wire 1 Y i0 $end
$var wire 1 Z i1 $end
$var wire 1 \ sumdiff $end
$var wire 1 c t_addsub $end
$var wire 1 d t_sumdiff $end
$var wire 1 e t $end
$var wire 1 a cout $end
$scope module _i0 $end
$var wire 1 X cin $end
$var wire 1 Y i0 $end
$var wire 1 f t2 $end
$var wire 1 g t1 $end
$var wire 1 h t0 $end
$var wire 1 d sum $end
$var wire 1 e i1 $end
$var wire 1 a cout $end
$scope module _i0 $end
$var wire 1 Y i0 $end
$var wire 1 X i2 $end
$var wire 1 i t $end
$var wire 1 d o $end
$var wire 1 e i1 $end
$scope module xor2_0 $end
$var wire 1 Y i0 $end
$var wire 1 i o $end
$var wire 1 e i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 X i0 $end
$var wire 1 i i1 $end
$var wire 1 d o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 Y i0 $end
$var wire 1 h o $end
$var wire 1 e i1 $end
$upscope $end
$scope module _i2 $end
$var wire 1 X i1 $end
$var wire 1 g o $end
$var wire 1 e i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 Y i0 $end
$var wire 1 X i1 $end
$var wire 1 f o $end
$upscope $end
$scope module _i4 $end
$var wire 1 h i0 $end
$var wire 1 g i1 $end
$var wire 1 f i2 $end
$var wire 1 j t $end
$var wire 1 a o $end
$scope module or2_0 $end
$var wire 1 h i0 $end
$var wire 1 g i1 $end
$var wire 1 j o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 f i0 $end
$var wire 1 j i1 $end
$var wire 1 a o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 Z i0 $end
$var wire 1 c i1 $end
$var wire 1 e o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 Y i0 $end
$var wire 1 Z i1 $end
$var wire 1 _ o $end
$upscope $end
$scope module _i2 $end
$var wire 1 Y i0 $end
$var wire 1 Z i1 $end
$var wire 1 ] o $end
$upscope $end
$scope module _i3 $end
$var wire 1 ] i0 $end
$var wire 1 _ i1 $end
$var wire 1 k j $end
$var wire 1 ^ o $end
$upscope $end
$scope module _i4 $end
$var wire 1 \ i0 $end
$var wire 1 ^ i1 $end
$var wire 1 l j $end
$var wire 1 ` o $end
$upscope $end
$upscope $end
$scope module _i11 $end
$var wire 1 m cin $end
$var wire 1 n i0 $end
$var wire 1 o i1 $end
$var wire 2 p op [1:0] $end
$var wire 1 q t_sumdiff $end
$var wire 1 r t_or $end
$var wire 1 s t_andor $end
$var wire 1 t t_and $end
$var wire 1 u o $end
$var wire 1 v cout $end
$scope module _i0 $end
$var wire 1 w addsub $end
$var wire 1 m cin $end
$var wire 1 n i0 $end
$var wire 1 o i1 $end
$var wire 1 q sumdiff $end
$var wire 1 x t_addsub $end
$var wire 1 y t_sumdiff $end
$var wire 1 z t $end
$var wire 1 v cout $end
$scope module _i0 $end
$var wire 1 m cin $end
$var wire 1 n i0 $end
$var wire 1 { t2 $end
$var wire 1 | t1 $end
$var wire 1 } t0 $end
$var wire 1 y sum $end
$var wire 1 z i1 $end
$var wire 1 v cout $end
$scope module _i0 $end
$var wire 1 n i0 $end
$var wire 1 m i2 $end
$var wire 1 ~ t $end
$var wire 1 y o $end
$var wire 1 z i1 $end
$scope module xor2_0 $end
$var wire 1 n i0 $end
$var wire 1 ~ o $end
$var wire 1 z i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 m i0 $end
$var wire 1 ~ i1 $end
$var wire 1 y o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 n i0 $end
$var wire 1 } o $end
$var wire 1 z i1 $end
$upscope $end
$scope module _i2 $end
$var wire 1 m i1 $end
$var wire 1 | o $end
$var wire 1 z i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 n i0 $end
$var wire 1 m i1 $end
$var wire 1 { o $end
$upscope $end
$scope module _i4 $end
$var wire 1 } i0 $end
$var wire 1 | i1 $end
$var wire 1 { i2 $end
$var wire 1 !" t $end
$var wire 1 v o $end
$scope module or2_0 $end
$var wire 1 } i0 $end
$var wire 1 | i1 $end
$var wire 1 !" o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 { i0 $end
$var wire 1 !" i1 $end
$var wire 1 v o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 o i0 $end
$var wire 1 x i1 $end
$var wire 1 z o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 n i0 $end
$var wire 1 o i1 $end
$var wire 1 t o $end
$upscope $end
$scope module _i2 $end
$var wire 1 n i0 $end
$var wire 1 o i1 $end
$var wire 1 r o $end
$upscope $end
$scope module _i3 $end
$var wire 1 r i0 $end
$var wire 1 t i1 $end
$var wire 1 "" j $end
$var wire 1 s o $end
$upscope $end
$scope module _i4 $end
$var wire 1 q i0 $end
$var wire 1 s i1 $end
$var wire 1 #" j $end
$var wire 1 u o $end
$upscope $end
$upscope $end
$scope module _i12 $end
$var wire 1 $" cin $end
$var wire 1 %" i0 $end
$var wire 1 &" i1 $end
$var wire 2 '" op [1:0] $end
$var wire 1 (" t_sumdiff $end
$var wire 1 )" t_or $end
$var wire 1 *" t_andor $end
$var wire 1 +" t_and $end
$var wire 1 ," o $end
$var wire 1 -" cout $end
$scope module _i0 $end
$var wire 1 ." addsub $end
$var wire 1 $" cin $end
$var wire 1 %" i0 $end
$var wire 1 &" i1 $end
$var wire 1 (" sumdiff $end
$var wire 1 /" t_addsub $end
$var wire 1 0" t_sumdiff $end
$var wire 1 1" t $end
$var wire 1 -" cout $end
$scope module _i0 $end
$var wire 1 $" cin $end
$var wire 1 %" i0 $end
$var wire 1 2" t2 $end
$var wire 1 3" t1 $end
$var wire 1 4" t0 $end
$var wire 1 0" sum $end
$var wire 1 1" i1 $end
$var wire 1 -" cout $end
$scope module _i0 $end
$var wire 1 %" i0 $end
$var wire 1 $" i2 $end
$var wire 1 5" t $end
$var wire 1 0" o $end
$var wire 1 1" i1 $end
$scope module xor2_0 $end
$var wire 1 %" i0 $end
$var wire 1 5" o $end
$var wire 1 1" i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 $" i0 $end
$var wire 1 5" i1 $end
$var wire 1 0" o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 %" i0 $end
$var wire 1 4" o $end
$var wire 1 1" i1 $end
$upscope $end
$scope module _i2 $end
$var wire 1 $" i1 $end
$var wire 1 3" o $end
$var wire 1 1" i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 %" i0 $end
$var wire 1 $" i1 $end
$var wire 1 2" o $end
$upscope $end
$scope module _i4 $end
$var wire 1 4" i0 $end
$var wire 1 3" i1 $end
$var wire 1 2" i2 $end
$var wire 1 6" t $end
$var wire 1 -" o $end
$scope module or2_0 $end
$var wire 1 4" i0 $end
$var wire 1 3" i1 $end
$var wire 1 6" o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 2" i0 $end
$var wire 1 6" i1 $end
$var wire 1 -" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 &" i0 $end
$var wire 1 /" i1 $end
$var wire 1 1" o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 %" i0 $end
$var wire 1 &" i1 $end
$var wire 1 +" o $end
$upscope $end
$scope module _i2 $end
$var wire 1 %" i0 $end
$var wire 1 &" i1 $end
$var wire 1 )" o $end
$upscope $end
$scope module _i3 $end
$var wire 1 )" i0 $end
$var wire 1 +" i1 $end
$var wire 1 7" j $end
$var wire 1 *" o $end
$upscope $end
$scope module _i4 $end
$var wire 1 (" i0 $end
$var wire 1 *" i1 $end
$var wire 1 8" j $end
$var wire 1 ," o $end
$upscope $end
$upscope $end
$scope module _i13 $end
$var wire 1 9" cin $end
$var wire 1 :" i0 $end
$var wire 1 ;" i1 $end
$var wire 2 <" op [1:0] $end
$var wire 1 =" t_sumdiff $end
$var wire 1 >" t_or $end
$var wire 1 ?" t_andor $end
$var wire 1 @" t_and $end
$var wire 1 A" o $end
$var wire 1 B" cout $end
$scope module _i0 $end
$var wire 1 C" addsub $end
$var wire 1 9" cin $end
$var wire 1 :" i0 $end
$var wire 1 ;" i1 $end
$var wire 1 =" sumdiff $end
$var wire 1 D" t_addsub $end
$var wire 1 E" t_sumdiff $end
$var wire 1 F" t $end
$var wire 1 B" cout $end
$scope module _i0 $end
$var wire 1 9" cin $end
$var wire 1 :" i0 $end
$var wire 1 G" t2 $end
$var wire 1 H" t1 $end
$var wire 1 I" t0 $end
$var wire 1 E" sum $end
$var wire 1 F" i1 $end
$var wire 1 B" cout $end
$scope module _i0 $end
$var wire 1 :" i0 $end
$var wire 1 9" i2 $end
$var wire 1 J" t $end
$var wire 1 E" o $end
$var wire 1 F" i1 $end
$scope module xor2_0 $end
$var wire 1 :" i0 $end
$var wire 1 J" o $end
$var wire 1 F" i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 9" i0 $end
$var wire 1 J" i1 $end
$var wire 1 E" o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 :" i0 $end
$var wire 1 I" o $end
$var wire 1 F" i1 $end
$upscope $end
$scope module _i2 $end
$var wire 1 9" i1 $end
$var wire 1 H" o $end
$var wire 1 F" i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 :" i0 $end
$var wire 1 9" i1 $end
$var wire 1 G" o $end
$upscope $end
$scope module _i4 $end
$var wire 1 I" i0 $end
$var wire 1 H" i1 $end
$var wire 1 G" i2 $end
$var wire 1 K" t $end
$var wire 1 B" o $end
$scope module or2_0 $end
$var wire 1 I" i0 $end
$var wire 1 H" i1 $end
$var wire 1 K" o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 G" i0 $end
$var wire 1 K" i1 $end
$var wire 1 B" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 ;" i0 $end
$var wire 1 D" i1 $end
$var wire 1 F" o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 :" i0 $end
$var wire 1 ;" i1 $end
$var wire 1 @" o $end
$upscope $end
$scope module _i2 $end
$var wire 1 :" i0 $end
$var wire 1 ;" i1 $end
$var wire 1 >" o $end
$upscope $end
$scope module _i3 $end
$var wire 1 >" i0 $end
$var wire 1 @" i1 $end
$var wire 1 L" j $end
$var wire 1 ?" o $end
$upscope $end
$scope module _i4 $end
$var wire 1 =" i0 $end
$var wire 1 ?" i1 $end
$var wire 1 M" j $end
$var wire 1 A" o $end
$upscope $end
$upscope $end
$scope module _i14 $end
$var wire 1 N" cin $end
$var wire 1 O" i0 $end
$var wire 1 P" i1 $end
$var wire 2 Q" op [1:0] $end
$var wire 1 R" t_sumdiff $end
$var wire 1 S" t_or $end
$var wire 1 T" t_andor $end
$var wire 1 U" t_and $end
$var wire 1 V" o $end
$var wire 1 W" cout $end
$scope module _i0 $end
$var wire 1 X" addsub $end
$var wire 1 N" cin $end
$var wire 1 O" i0 $end
$var wire 1 P" i1 $end
$var wire 1 R" sumdiff $end
$var wire 1 Y" t_addsub $end
$var wire 1 Z" t_sumdiff $end
$var wire 1 [" t $end
$var wire 1 W" cout $end
$scope module _i0 $end
$var wire 1 N" cin $end
$var wire 1 O" i0 $end
$var wire 1 \" t2 $end
$var wire 1 ]" t1 $end
$var wire 1 ^" t0 $end
$var wire 1 Z" sum $end
$var wire 1 [" i1 $end
$var wire 1 W" cout $end
$scope module _i0 $end
$var wire 1 O" i0 $end
$var wire 1 N" i2 $end
$var wire 1 _" t $end
$var wire 1 Z" o $end
$var wire 1 [" i1 $end
$scope module xor2_0 $end
$var wire 1 O" i0 $end
$var wire 1 _" o $end
$var wire 1 [" i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 N" i0 $end
$var wire 1 _" i1 $end
$var wire 1 Z" o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 O" i0 $end
$var wire 1 ^" o $end
$var wire 1 [" i1 $end
$upscope $end
$scope module _i2 $end
$var wire 1 N" i1 $end
$var wire 1 ]" o $end
$var wire 1 [" i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 O" i0 $end
$var wire 1 N" i1 $end
$var wire 1 \" o $end
$upscope $end
$scope module _i4 $end
$var wire 1 ^" i0 $end
$var wire 1 ]" i1 $end
$var wire 1 \" i2 $end
$var wire 1 `" t $end
$var wire 1 W" o $end
$scope module or2_0 $end
$var wire 1 ^" i0 $end
$var wire 1 ]" i1 $end
$var wire 1 `" o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 \" i0 $end
$var wire 1 `" i1 $end
$var wire 1 W" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 P" i0 $end
$var wire 1 Y" i1 $end
$var wire 1 [" o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 O" i0 $end
$var wire 1 P" i1 $end
$var wire 1 U" o $end
$upscope $end
$scope module _i2 $end
$var wire 1 O" i0 $end
$var wire 1 P" i1 $end
$var wire 1 S" o $end
$upscope $end
$scope module _i3 $end
$var wire 1 S" i0 $end
$var wire 1 U" i1 $end
$var wire 1 a" j $end
$var wire 1 T" o $end
$upscope $end
$scope module _i4 $end
$var wire 1 R" i0 $end
$var wire 1 T" i1 $end
$var wire 1 b" j $end
$var wire 1 V" o $end
$upscope $end
$upscope $end
$scope module _i15 $end
$var wire 1 c" cin $end
$var wire 1 d" i0 $end
$var wire 1 e" i1 $end
$var wire 2 f" op [1:0] $end
$var wire 1 g" t_sumdiff $end
$var wire 1 h" t_or $end
$var wire 1 i" t_andor $end
$var wire 1 j" t_and $end
$var wire 1 k" o $end
$var wire 1 l" cout $end
$scope module _i0 $end
$var wire 1 m" addsub $end
$var wire 1 c" cin $end
$var wire 1 d" i0 $end
$var wire 1 e" i1 $end
$var wire 1 g" sumdiff $end
$var wire 1 n" t_addsub $end
$var wire 1 o" t_sumdiff $end
$var wire 1 p" t $end
$var wire 1 l" cout $end
$scope module _i0 $end
$var wire 1 c" cin $end
$var wire 1 d" i0 $end
$var wire 1 q" t2 $end
$var wire 1 r" t1 $end
$var wire 1 s" t0 $end
$var wire 1 o" sum $end
$var wire 1 p" i1 $end
$var wire 1 l" cout $end
$scope module _i0 $end
$var wire 1 d" i0 $end
$var wire 1 c" i2 $end
$var wire 1 t" t $end
$var wire 1 o" o $end
$var wire 1 p" i1 $end
$scope module xor2_0 $end
$var wire 1 d" i0 $end
$var wire 1 t" o $end
$var wire 1 p" i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 c" i0 $end
$var wire 1 t" i1 $end
$var wire 1 o" o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 d" i0 $end
$var wire 1 s" o $end
$var wire 1 p" i1 $end
$upscope $end
$scope module _i2 $end
$var wire 1 c" i1 $end
$var wire 1 r" o $end
$var wire 1 p" i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 d" i0 $end
$var wire 1 c" i1 $end
$var wire 1 q" o $end
$upscope $end
$scope module _i4 $end
$var wire 1 s" i0 $end
$var wire 1 r" i1 $end
$var wire 1 q" i2 $end
$var wire 1 u" t $end
$var wire 1 l" o $end
$scope module or2_0 $end
$var wire 1 s" i0 $end
$var wire 1 r" i1 $end
$var wire 1 u" o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 q" i0 $end
$var wire 1 u" i1 $end
$var wire 1 l" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 e" i0 $end
$var wire 1 n" i1 $end
$var wire 1 p" o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 d" i0 $end
$var wire 1 e" i1 $end
$var wire 1 j" o $end
$upscope $end
$scope module _i2 $end
$var wire 1 d" i0 $end
$var wire 1 e" i1 $end
$var wire 1 h" o $end
$upscope $end
$scope module _i3 $end
$var wire 1 h" i0 $end
$var wire 1 j" i1 $end
$var wire 1 v" j $end
$var wire 1 i" o $end
$upscope $end
$scope module _i4 $end
$var wire 1 g" i0 $end
$var wire 1 i" i1 $end
$var wire 1 w" j $end
$var wire 1 k" o $end
$upscope $end
$upscope $end
$scope module _i2 $end
$var wire 1 x" cin $end
$var wire 1 y" i0 $end
$var wire 1 z" i1 $end
$var wire 2 {" op [1:0] $end
$var wire 1 |" t_sumdiff $end
$var wire 1 }" t_or $end
$var wire 1 ~" t_andor $end
$var wire 1 !# t_and $end
$var wire 1 "# o $end
$var wire 1 ## cout $end
$scope module _i0 $end
$var wire 1 $# addsub $end
$var wire 1 x" cin $end
$var wire 1 y" i0 $end
$var wire 1 z" i1 $end
$var wire 1 |" sumdiff $end
$var wire 1 %# t_addsub $end
$var wire 1 &# t_sumdiff $end
$var wire 1 '# t $end
$var wire 1 ## cout $end
$scope module _i0 $end
$var wire 1 x" cin $end
$var wire 1 y" i0 $end
$var wire 1 (# t2 $end
$var wire 1 )# t1 $end
$var wire 1 *# t0 $end
$var wire 1 &# sum $end
$var wire 1 '# i1 $end
$var wire 1 ## cout $end
$scope module _i0 $end
$var wire 1 y" i0 $end
$var wire 1 x" i2 $end
$var wire 1 +# t $end
$var wire 1 &# o $end
$var wire 1 '# i1 $end
$scope module xor2_0 $end
$var wire 1 y" i0 $end
$var wire 1 +# o $end
$var wire 1 '# i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 x" i0 $end
$var wire 1 +# i1 $end
$var wire 1 &# o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 y" i0 $end
$var wire 1 *# o $end
$var wire 1 '# i1 $end
$upscope $end
$scope module _i2 $end
$var wire 1 x" i1 $end
$var wire 1 )# o $end
$var wire 1 '# i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 y" i0 $end
$var wire 1 x" i1 $end
$var wire 1 (# o $end
$upscope $end
$scope module _i4 $end
$var wire 1 *# i0 $end
$var wire 1 )# i1 $end
$var wire 1 (# i2 $end
$var wire 1 ,# t $end
$var wire 1 ## o $end
$scope module or2_0 $end
$var wire 1 *# i0 $end
$var wire 1 )# i1 $end
$var wire 1 ,# o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 (# i0 $end
$var wire 1 ,# i1 $end
$var wire 1 ## o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 z" i0 $end
$var wire 1 %# i1 $end
$var wire 1 '# o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 y" i0 $end
$var wire 1 z" i1 $end
$var wire 1 !# o $end
$upscope $end
$scope module _i2 $end
$var wire 1 y" i0 $end
$var wire 1 z" i1 $end
$var wire 1 }" o $end
$upscope $end
$scope module _i3 $end
$var wire 1 }" i0 $end
$var wire 1 !# i1 $end
$var wire 1 -# j $end
$var wire 1 ~" o $end
$upscope $end
$scope module _i4 $end
$var wire 1 |" i0 $end
$var wire 1 ~" i1 $end
$var wire 1 .# j $end
$var wire 1 "# o $end
$upscope $end
$upscope $end
$scope module _i3 $end
$var wire 1 /# cin $end
$var wire 1 0# i0 $end
$var wire 1 1# i1 $end
$var wire 2 2# op [1:0] $end
$var wire 1 3# t_sumdiff $end
$var wire 1 4# t_or $end
$var wire 1 5# t_andor $end
$var wire 1 6# t_and $end
$var wire 1 7# o $end
$var wire 1 8# cout $end
$scope module _i0 $end
$var wire 1 9# addsub $end
$var wire 1 /# cin $end
$var wire 1 0# i0 $end
$var wire 1 1# i1 $end
$var wire 1 3# sumdiff $end
$var wire 1 :# t_addsub $end
$var wire 1 ;# t_sumdiff $end
$var wire 1 <# t $end
$var wire 1 8# cout $end
$scope module _i0 $end
$var wire 1 /# cin $end
$var wire 1 0# i0 $end
$var wire 1 =# t2 $end
$var wire 1 ># t1 $end
$var wire 1 ?# t0 $end
$var wire 1 ;# sum $end
$var wire 1 <# i1 $end
$var wire 1 8# cout $end
$scope module _i0 $end
$var wire 1 0# i0 $end
$var wire 1 /# i2 $end
$var wire 1 @# t $end
$var wire 1 ;# o $end
$var wire 1 <# i1 $end
$scope module xor2_0 $end
$var wire 1 0# i0 $end
$var wire 1 @# o $end
$var wire 1 <# i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 /# i0 $end
$var wire 1 @# i1 $end
$var wire 1 ;# o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 0# i0 $end
$var wire 1 ?# o $end
$var wire 1 <# i1 $end
$upscope $end
$scope module _i2 $end
$var wire 1 /# i1 $end
$var wire 1 ># o $end
$var wire 1 <# i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 0# i0 $end
$var wire 1 /# i1 $end
$var wire 1 =# o $end
$upscope $end
$scope module _i4 $end
$var wire 1 ?# i0 $end
$var wire 1 ># i1 $end
$var wire 1 =# i2 $end
$var wire 1 A# t $end
$var wire 1 8# o $end
$scope module or2_0 $end
$var wire 1 ?# i0 $end
$var wire 1 ># i1 $end
$var wire 1 A# o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 =# i0 $end
$var wire 1 A# i1 $end
$var wire 1 8# o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 1# i0 $end
$var wire 1 :# i1 $end
$var wire 1 <# o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 0# i0 $end
$var wire 1 1# i1 $end
$var wire 1 6# o $end
$upscope $end
$scope module _i2 $end
$var wire 1 0# i0 $end
$var wire 1 1# i1 $end
$var wire 1 4# o $end
$upscope $end
$scope module _i3 $end
$var wire 1 4# i0 $end
$var wire 1 6# i1 $end
$var wire 1 B# j $end
$var wire 1 5# o $end
$upscope $end
$scope module _i4 $end
$var wire 1 3# i0 $end
$var wire 1 5# i1 $end
$var wire 1 C# j $end
$var wire 1 7# o $end
$upscope $end
$upscope $end
$scope module _i4 $end
$var wire 1 D# cin $end
$var wire 1 E# i0 $end
$var wire 1 F# i1 $end
$var wire 2 G# op [1:0] $end
$var wire 1 H# t_sumdiff $end
$var wire 1 I# t_or $end
$var wire 1 J# t_andor $end
$var wire 1 K# t_and $end
$var wire 1 L# o $end
$var wire 1 M# cout $end
$scope module _i0 $end
$var wire 1 N# addsub $end
$var wire 1 D# cin $end
$var wire 1 E# i0 $end
$var wire 1 F# i1 $end
$var wire 1 H# sumdiff $end
$var wire 1 O# t_addsub $end
$var wire 1 P# t_sumdiff $end
$var wire 1 Q# t $end
$var wire 1 M# cout $end
$scope module _i0 $end
$var wire 1 D# cin $end
$var wire 1 E# i0 $end
$var wire 1 R# t2 $end
$var wire 1 S# t1 $end
$var wire 1 T# t0 $end
$var wire 1 P# sum $end
$var wire 1 Q# i1 $end
$var wire 1 M# cout $end
$scope module _i0 $end
$var wire 1 E# i0 $end
$var wire 1 D# i2 $end
$var wire 1 U# t $end
$var wire 1 P# o $end
$var wire 1 Q# i1 $end
$scope module xor2_0 $end
$var wire 1 E# i0 $end
$var wire 1 U# o $end
$var wire 1 Q# i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 D# i0 $end
$var wire 1 U# i1 $end
$var wire 1 P# o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 E# i0 $end
$var wire 1 T# o $end
$var wire 1 Q# i1 $end
$upscope $end
$scope module _i2 $end
$var wire 1 D# i1 $end
$var wire 1 S# o $end
$var wire 1 Q# i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 E# i0 $end
$var wire 1 D# i1 $end
$var wire 1 R# o $end
$upscope $end
$scope module _i4 $end
$var wire 1 T# i0 $end
$var wire 1 S# i1 $end
$var wire 1 R# i2 $end
$var wire 1 V# t $end
$var wire 1 M# o $end
$scope module or2_0 $end
$var wire 1 T# i0 $end
$var wire 1 S# i1 $end
$var wire 1 V# o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 R# i0 $end
$var wire 1 V# i1 $end
$var wire 1 M# o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 F# i0 $end
$var wire 1 O# i1 $end
$var wire 1 Q# o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 E# i0 $end
$var wire 1 F# i1 $end
$var wire 1 K# o $end
$upscope $end
$scope module _i2 $end
$var wire 1 E# i0 $end
$var wire 1 F# i1 $end
$var wire 1 I# o $end
$upscope $end
$scope module _i3 $end
$var wire 1 I# i0 $end
$var wire 1 K# i1 $end
$var wire 1 W# j $end
$var wire 1 J# o $end
$upscope $end
$scope module _i4 $end
$var wire 1 H# i0 $end
$var wire 1 J# i1 $end
$var wire 1 X# j $end
$var wire 1 L# o $end
$upscope $end
$upscope $end
$scope module _i5 $end
$var wire 1 Y# cin $end
$var wire 1 Z# i0 $end
$var wire 1 [# i1 $end
$var wire 2 \# op [1:0] $end
$var wire 1 ]# t_sumdiff $end
$var wire 1 ^# t_or $end
$var wire 1 _# t_andor $end
$var wire 1 `# t_and $end
$var wire 1 a# o $end
$var wire 1 b# cout $end
$scope module _i0 $end
$var wire 1 c# addsub $end
$var wire 1 Y# cin $end
$var wire 1 Z# i0 $end
$var wire 1 [# i1 $end
$var wire 1 ]# sumdiff $end
$var wire 1 d# t_addsub $end
$var wire 1 e# t_sumdiff $end
$var wire 1 f# t $end
$var wire 1 b# cout $end
$scope module _i0 $end
$var wire 1 Y# cin $end
$var wire 1 Z# i0 $end
$var wire 1 g# t2 $end
$var wire 1 h# t1 $end
$var wire 1 i# t0 $end
$var wire 1 e# sum $end
$var wire 1 f# i1 $end
$var wire 1 b# cout $end
$scope module _i0 $end
$var wire 1 Z# i0 $end
$var wire 1 Y# i2 $end
$var wire 1 j# t $end
$var wire 1 e# o $end
$var wire 1 f# i1 $end
$scope module xor2_0 $end
$var wire 1 Z# i0 $end
$var wire 1 j# o $end
$var wire 1 f# i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 Y# i0 $end
$var wire 1 j# i1 $end
$var wire 1 e# o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 Z# i0 $end
$var wire 1 i# o $end
$var wire 1 f# i1 $end
$upscope $end
$scope module _i2 $end
$var wire 1 Y# i1 $end
$var wire 1 h# o $end
$var wire 1 f# i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 Z# i0 $end
$var wire 1 Y# i1 $end
$var wire 1 g# o $end
$upscope $end
$scope module _i4 $end
$var wire 1 i# i0 $end
$var wire 1 h# i1 $end
$var wire 1 g# i2 $end
$var wire 1 k# t $end
$var wire 1 b# o $end
$scope module or2_0 $end
$var wire 1 i# i0 $end
$var wire 1 h# i1 $end
$var wire 1 k# o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 g# i0 $end
$var wire 1 k# i1 $end
$var wire 1 b# o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 [# i0 $end
$var wire 1 d# i1 $end
$var wire 1 f# o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 Z# i0 $end
$var wire 1 [# i1 $end
$var wire 1 `# o $end
$upscope $end
$scope module _i2 $end
$var wire 1 Z# i0 $end
$var wire 1 [# i1 $end
$var wire 1 ^# o $end
$upscope $end
$scope module _i3 $end
$var wire 1 ^# i0 $end
$var wire 1 `# i1 $end
$var wire 1 l# j $end
$var wire 1 _# o $end
$upscope $end
$scope module _i4 $end
$var wire 1 ]# i0 $end
$var wire 1 _# i1 $end
$var wire 1 m# j $end
$var wire 1 a# o $end
$upscope $end
$upscope $end
$scope module _i6 $end
$var wire 1 n# cin $end
$var wire 1 o# i0 $end
$var wire 1 p# i1 $end
$var wire 2 q# op [1:0] $end
$var wire 1 r# t_sumdiff $end
$var wire 1 s# t_or $end
$var wire 1 t# t_andor $end
$var wire 1 u# t_and $end
$var wire 1 v# o $end
$var wire 1 w# cout $end
$scope module _i0 $end
$var wire 1 x# addsub $end
$var wire 1 n# cin $end
$var wire 1 o# i0 $end
$var wire 1 p# i1 $end
$var wire 1 r# sumdiff $end
$var wire 1 y# t_addsub $end
$var wire 1 z# t_sumdiff $end
$var wire 1 {# t $end
$var wire 1 w# cout $end
$scope module _i0 $end
$var wire 1 n# cin $end
$var wire 1 o# i0 $end
$var wire 1 |# t2 $end
$var wire 1 }# t1 $end
$var wire 1 ~# t0 $end
$var wire 1 z# sum $end
$var wire 1 {# i1 $end
$var wire 1 w# cout $end
$scope module _i0 $end
$var wire 1 o# i0 $end
$var wire 1 n# i2 $end
$var wire 1 !$ t $end
$var wire 1 z# o $end
$var wire 1 {# i1 $end
$scope module xor2_0 $end
$var wire 1 o# i0 $end
$var wire 1 !$ o $end
$var wire 1 {# i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 n# i0 $end
$var wire 1 !$ i1 $end
$var wire 1 z# o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 o# i0 $end
$var wire 1 ~# o $end
$var wire 1 {# i1 $end
$upscope $end
$scope module _i2 $end
$var wire 1 n# i1 $end
$var wire 1 }# o $end
$var wire 1 {# i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 o# i0 $end
$var wire 1 n# i1 $end
$var wire 1 |# o $end
$upscope $end
$scope module _i4 $end
$var wire 1 ~# i0 $end
$var wire 1 }# i1 $end
$var wire 1 |# i2 $end
$var wire 1 "$ t $end
$var wire 1 w# o $end
$scope module or2_0 $end
$var wire 1 ~# i0 $end
$var wire 1 }# i1 $end
$var wire 1 "$ o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 |# i0 $end
$var wire 1 "$ i1 $end
$var wire 1 w# o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 p# i0 $end
$var wire 1 y# i1 $end
$var wire 1 {# o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 o# i0 $end
$var wire 1 p# i1 $end
$var wire 1 u# o $end
$upscope $end
$scope module _i2 $end
$var wire 1 o# i0 $end
$var wire 1 p# i1 $end
$var wire 1 s# o $end
$upscope $end
$scope module _i3 $end
$var wire 1 s# i0 $end
$var wire 1 u# i1 $end
$var wire 1 #$ j $end
$var wire 1 t# o $end
$upscope $end
$scope module _i4 $end
$var wire 1 r# i0 $end
$var wire 1 t# i1 $end
$var wire 1 $$ j $end
$var wire 1 v# o $end
$upscope $end
$upscope $end
$scope module _i7 $end
$var wire 1 %$ cin $end
$var wire 1 &$ i0 $end
$var wire 1 '$ i1 $end
$var wire 2 ($ op [1:0] $end
$var wire 1 )$ t_sumdiff $end
$var wire 1 *$ t_or $end
$var wire 1 +$ t_andor $end
$var wire 1 ,$ t_and $end
$var wire 1 -$ o $end
$var wire 1 .$ cout $end
$scope module _i0 $end
$var wire 1 /$ addsub $end
$var wire 1 %$ cin $end
$var wire 1 &$ i0 $end
$var wire 1 '$ i1 $end
$var wire 1 )$ sumdiff $end
$var wire 1 0$ t_addsub $end
$var wire 1 1$ t_sumdiff $end
$var wire 1 2$ t $end
$var wire 1 .$ cout $end
$scope module _i0 $end
$var wire 1 %$ cin $end
$var wire 1 &$ i0 $end
$var wire 1 3$ t2 $end
$var wire 1 4$ t1 $end
$var wire 1 5$ t0 $end
$var wire 1 1$ sum $end
$var wire 1 2$ i1 $end
$var wire 1 .$ cout $end
$scope module _i0 $end
$var wire 1 &$ i0 $end
$var wire 1 %$ i2 $end
$var wire 1 6$ t $end
$var wire 1 1$ o $end
$var wire 1 2$ i1 $end
$scope module xor2_0 $end
$var wire 1 &$ i0 $end
$var wire 1 6$ o $end
$var wire 1 2$ i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 %$ i0 $end
$var wire 1 6$ i1 $end
$var wire 1 1$ o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 &$ i0 $end
$var wire 1 5$ o $end
$var wire 1 2$ i1 $end
$upscope $end
$scope module _i2 $end
$var wire 1 %$ i1 $end
$var wire 1 4$ o $end
$var wire 1 2$ i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 &$ i0 $end
$var wire 1 %$ i1 $end
$var wire 1 3$ o $end
$upscope $end
$scope module _i4 $end
$var wire 1 5$ i0 $end
$var wire 1 4$ i1 $end
$var wire 1 3$ i2 $end
$var wire 1 7$ t $end
$var wire 1 .$ o $end
$scope module or2_0 $end
$var wire 1 5$ i0 $end
$var wire 1 4$ i1 $end
$var wire 1 7$ o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 3$ i0 $end
$var wire 1 7$ i1 $end
$var wire 1 .$ o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 '$ i0 $end
$var wire 1 0$ i1 $end
$var wire 1 2$ o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 &$ i0 $end
$var wire 1 '$ i1 $end
$var wire 1 ,$ o $end
$upscope $end
$scope module _i2 $end
$var wire 1 &$ i0 $end
$var wire 1 '$ i1 $end
$var wire 1 *$ o $end
$upscope $end
$scope module _i3 $end
$var wire 1 *$ i0 $end
$var wire 1 ,$ i1 $end
$var wire 1 8$ j $end
$var wire 1 +$ o $end
$upscope $end
$scope module _i4 $end
$var wire 1 )$ i0 $end
$var wire 1 +$ i1 $end
$var wire 1 9$ j $end
$var wire 1 -$ o $end
$upscope $end
$upscope $end
$scope module _i8 $end
$var wire 1 :$ cin $end
$var wire 1 ;$ i0 $end
$var wire 1 <$ i1 $end
$var wire 2 =$ op [1:0] $end
$var wire 1 >$ t_sumdiff $end
$var wire 1 ?$ t_or $end
$var wire 1 @$ t_andor $end
$var wire 1 A$ t_and $end
$var wire 1 B$ o $end
$var wire 1 C$ cout $end
$scope module _i0 $end
$var wire 1 D$ addsub $end
$var wire 1 :$ cin $end
$var wire 1 ;$ i0 $end
$var wire 1 <$ i1 $end
$var wire 1 >$ sumdiff $end
$var wire 1 E$ t_addsub $end
$var wire 1 F$ t_sumdiff $end
$var wire 1 G$ t $end
$var wire 1 C$ cout $end
$scope module _i0 $end
$var wire 1 :$ cin $end
$var wire 1 ;$ i0 $end
$var wire 1 H$ t2 $end
$var wire 1 I$ t1 $end
$var wire 1 J$ t0 $end
$var wire 1 F$ sum $end
$var wire 1 G$ i1 $end
$var wire 1 C$ cout $end
$scope module _i0 $end
$var wire 1 ;$ i0 $end
$var wire 1 :$ i2 $end
$var wire 1 K$ t $end
$var wire 1 F$ o $end
$var wire 1 G$ i1 $end
$scope module xor2_0 $end
$var wire 1 ;$ i0 $end
$var wire 1 K$ o $end
$var wire 1 G$ i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 :$ i0 $end
$var wire 1 K$ i1 $end
$var wire 1 F$ o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 ;$ i0 $end
$var wire 1 J$ o $end
$var wire 1 G$ i1 $end
$upscope $end
$scope module _i2 $end
$var wire 1 :$ i1 $end
$var wire 1 I$ o $end
$var wire 1 G$ i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 ;$ i0 $end
$var wire 1 :$ i1 $end
$var wire 1 H$ o $end
$upscope $end
$scope module _i4 $end
$var wire 1 J$ i0 $end
$var wire 1 I$ i1 $end
$var wire 1 H$ i2 $end
$var wire 1 L$ t $end
$var wire 1 C$ o $end
$scope module or2_0 $end
$var wire 1 J$ i0 $end
$var wire 1 I$ i1 $end
$var wire 1 L$ o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 H$ i0 $end
$var wire 1 L$ i1 $end
$var wire 1 C$ o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 <$ i0 $end
$var wire 1 E$ i1 $end
$var wire 1 G$ o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 ;$ i0 $end
$var wire 1 <$ i1 $end
$var wire 1 A$ o $end
$upscope $end
$scope module _i2 $end
$var wire 1 ;$ i0 $end
$var wire 1 <$ i1 $end
$var wire 1 ?$ o $end
$upscope $end
$scope module _i3 $end
$var wire 1 ?$ i0 $end
$var wire 1 A$ i1 $end
$var wire 1 M$ j $end
$var wire 1 @$ o $end
$upscope $end
$scope module _i4 $end
$var wire 1 >$ i0 $end
$var wire 1 @$ i1 $end
$var wire 1 N$ j $end
$var wire 1 B$ o $end
$upscope $end
$upscope $end
$scope module _i9 $end
$var wire 1 O$ cin $end
$var wire 1 P$ i0 $end
$var wire 1 Q$ i1 $end
$var wire 2 R$ op [1:0] $end
$var wire 1 S$ t_sumdiff $end
$var wire 1 T$ t_or $end
$var wire 1 U$ t_andor $end
$var wire 1 V$ t_and $end
$var wire 1 W$ o $end
$var wire 1 X$ cout $end
$scope module _i0 $end
$var wire 1 Y$ addsub $end
$var wire 1 O$ cin $end
$var wire 1 P$ i0 $end
$var wire 1 Q$ i1 $end
$var wire 1 S$ sumdiff $end
$var wire 1 Z$ t_addsub $end
$var wire 1 [$ t_sumdiff $end
$var wire 1 \$ t $end
$var wire 1 X$ cout $end
$scope module _i0 $end
$var wire 1 O$ cin $end
$var wire 1 P$ i0 $end
$var wire 1 ]$ t2 $end
$var wire 1 ^$ t1 $end
$var wire 1 _$ t0 $end
$var wire 1 [$ sum $end
$var wire 1 \$ i1 $end
$var wire 1 X$ cout $end
$scope module _i0 $end
$var wire 1 P$ i0 $end
$var wire 1 O$ i2 $end
$var wire 1 `$ t $end
$var wire 1 [$ o $end
$var wire 1 \$ i1 $end
$scope module xor2_0 $end
$var wire 1 P$ i0 $end
$var wire 1 `$ o $end
$var wire 1 \$ i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 O$ i0 $end
$var wire 1 `$ i1 $end
$var wire 1 [$ o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 P$ i0 $end
$var wire 1 _$ o $end
$var wire 1 \$ i1 $end
$upscope $end
$scope module _i2 $end
$var wire 1 O$ i1 $end
$var wire 1 ^$ o $end
$var wire 1 \$ i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 P$ i0 $end
$var wire 1 O$ i1 $end
$var wire 1 ]$ o $end
$upscope $end
$scope module _i4 $end
$var wire 1 _$ i0 $end
$var wire 1 ^$ i1 $end
$var wire 1 ]$ i2 $end
$var wire 1 a$ t $end
$var wire 1 X$ o $end
$scope module or2_0 $end
$var wire 1 _$ i0 $end
$var wire 1 ^$ i1 $end
$var wire 1 a$ o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 ]$ i0 $end
$var wire 1 a$ i1 $end
$var wire 1 X$ o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 Q$ i0 $end
$var wire 1 Z$ i1 $end
$var wire 1 \$ o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 P$ i0 $end
$var wire 1 Q$ i1 $end
$var wire 1 V$ o $end
$upscope $end
$scope module _i2 $end
$var wire 1 P$ i0 $end
$var wire 1 Q$ i1 $end
$var wire 1 T$ o $end
$upscope $end
$scope module _i3 $end
$var wire 1 T$ i0 $end
$var wire 1 V$ i1 $end
$var wire 1 b$ j $end
$var wire 1 U$ o $end
$upscope $end
$scope module _i4 $end
$var wire 1 S$ i0 $end
$var wire 1 U$ i1 $end
$var wire 1 c$ j $end
$var wire 1 W$ o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0c$
0b$
0a$
x`$
0_$
0^$
0]$
x\$
x[$
zZ$
0Y$
0X$
zW$
0V$
0U$
0T$
zS$
b0 R$
0Q$
0P$
0O$
0N$
0M$
0L$
xK$
0J$
0I$
0H$
xG$
xF$
zE$
0D$
0C$
zB$
0A$
0@$
0?$
z>$
b0 =$
0<$
0;$
0:$
09$
08$
07$
x6$
05$
04$
03$
x2$
x1$
z0$
0/$
0.$
z-$
0,$
0+$
0*$
z)$
b0 ($
0'$
0&$
0%$
0$$
0#$
0"$
x!$
0~#
0}#
0|#
x{#
xz#
zy#
0x#
0w#
zv#
0u#
0t#
0s#
zr#
b0 q#
0p#
0o#
0n#
0m#
0l#
0k#
xj#
0i#
0h#
0g#
xf#
xe#
zd#
0c#
0b#
za#
0`#
0_#
0^#
z]#
b0 \#
0[#
0Z#
0Y#
0X#
0W#
0V#
xU#
0T#
0S#
0R#
xQ#
xP#
zO#
0N#
0M#
zL#
0K#
0J#
0I#
zH#
b0 G#
0F#
0E#
0D#
0C#
0B#
0A#
x@#
0?#
0>#
0=#
x<#
x;#
z:#
09#
08#
z7#
06#
05#
04#
z3#
b0 2#
01#
00#
0/#
0.#
0-#
0,#
x+#
0*#
0)#
0(#
x'#
x&#
z%#
0$#
0##
z"#
0!#
0~"
0}"
z|"
b0 {"
0z"
0y"
0x"
0w"
0v"
0u"
xt"
0s"
0r"
0q"
xp"
xo"
zn"
0m"
0l"
zk"
0j"
0i"
0h"
zg"
b0 f"
0e"
0d"
0c"
0b"
0a"
0`"
x_"
0^"
0]"
0\"
x["
xZ"
zY"
0X"
0W"
zV"
0U"
0T"
0S"
zR"
b0 Q"
0P"
0O"
0N"
0M"
0L"
0K"
xJ"
0I"
0H"
0G"
xF"
xE"
zD"
0C"
0B"
zA"
0@"
0?"
0>"
z="
b0 <"
0;"
0:"
09"
08"
07"
06"
x5"
04"
03"
02"
x1"
x0"
z/"
0."
0-"
z,"
0+"
0*"
0)"
z("
b0 '"
0&"
0%"
0$"
0#"
0""
0!"
x~
0}
0|
0{
xz
xy
zx
0w
0v
zu
0t
0s
0r
zq
b0 p
0o
0n
0m
0l
0k
0j
xi
0h
0g
0f
xe
xd
zc
0b
0a
z`
0_
0^
0]
z\
b0 [
0Z
0Y
0X
0W
0V
0U
xT
0S
0R
0Q
xP
xO
zN
0M
0L
zK
0J
0I
0H
zG
b0 F
0E
0D
0C
0B
0A
0@
x?
0>
0=
0<
x;
x:
z9
08
07
z6
05
04
03
z2
b0 1
00
0/
0.
b0 -
bz ,
b0 +
b0 *
b0 )
bx (
1'
b0 &
b0 %
b0 $
0#
bz "
z!
$end
#50
1#
#60
b0 (
#100
0#
#125
0'
#150
1#
#160
b1 (
#200
0#
#250
1#
#260
x^$
x]$
xO$
xC$
xL$
x)#
x(#
xS#
xR#
x}#
x|#
xI$
x|
x{
xH"
xG"
xr"
xq"
xx"
xD#
xn#
x:$
xm
x9"
xc"
xL
x8#
xb#
x.$
xa
x-"
xW"
xU
xA#
xk#
x7$
xj
x6"
x`"
xR
x>#
xh#
x4$
xg
x3"
x]"
xC
x/#
xY#
x%$
xX
x$"
xN"
x7
x##
xM#
xw#
xX$
xv
xB"
bx -
xl"
x@
14
x,#
1~"
xV#
1J#
x"$
1t#
xa$
1U$
x!"
1s
xK"
1?"
xu"
1i"
1I
15#
1_#
1+$
1@$
1^
1*"
1T"
x>
13
x*#
1}"
xT#
1I#
x~#
1s#
x_$
1T$
x}
1r
xI"
1>"
xs"
1h"
1H
14#
1^#
1*$
1?$
1]
1)"
1S"
1/
1y"
1E#
1o#
1P$
1n
1:"
1d"
1E
11#
1[#
1'$
1<$
1Z
1&"
1P"
b10 (
b1010101001010101 $
b1010101001010101 )
b101010110101010 %
b101010110101010 *
#300
0#
#350
1#
#360
xS
xQ
x?#
x=#
xi#
xg#
x5$
x3$
xJ$
xH$
xh
xf
x4"
x2"
x^"
x\"
15
1D
10#
1Z#
1&$
1;$
1Y
1%"
1O"
10
0E
01#
0[#
0'$
0<$
0Z
0&"
0P"
b11 (
b1111111111111111 $
b1111111111111111 )
b1 %
b1 *
#400
0#
#450
1#
#460
0i"
0S
0Q
0*#
0(#
0?#
0=#
0T#
0R#
0i#
0g#
0~#
0|#
05$
03$
0J$
0H$
0_$
0]$
0h
0f
0}
0{
04"
02"
0I"
0G"
0^"
0\"
0s"
0q"
0h"
0D
0y"
00#
0E#
0Z#
0o#
0&$
0;$
0P$
0Y
0n
0%"
0:"
0O"
0d"
1E
1z"
11#
1F#
1[#
1p#
1'$
1<$
1Q$
1Z
1o
1&"
1;"
1P"
b100 (
b1 $
b1 )
b111111111111111 %
b111111111111111 *
#500
0#
#550
1#
#560
x=
04
0I
0^
0s
0*"
0?"
0T"
0~"
05#
0J#
0_#
0t#
0+$
0@$
0U$
0>
05
03
0H
0}"
04#
0I#
0^#
0s#
0*$
0?$
0T$
0]
0r
0)"
0>"
0S"
1.
18
1A
1M
1V
1b
1k
1w
1""
1."
17"
1C"
1L"
1X"
1a"
1m"
1v"
1$#
1-#
19#
1B#
1N#
1W#
1c#
1l#
1x#
1#$
1/$
18$
1D$
1M$
1Y$
1b$
0/
00
0E
0z"
01#
0F#
0[#
0p#
0'$
0<$
0Q$
0Z
0o
0&"
0;"
0P"
b101 (
b1 &
b1 +
b1 1
b1 F
b1 [
b1 p
b1 '"
b1 <"
b1 Q"
b1 f"
b1 {"
b1 2#
b1 G#
b1 \#
b1 q#
b1 ($
b1 =$
b1 R$
b0 $
b0 )
b0 %
b0 *
#600
0#
#650
1#
#660
1C
bx1 -
17
x>
1<
13
x*#
x(#
1}"
xT#
xR#
1I#
x~#
x|#
1s#
x_$
x]$
1T$
x}
x{
1r
xI"
xG"
1>"
xs"
xq"
1h"
1H
14#
1^#
1*$
1?$
1]
1)"
1S"
1/
1y"
1E#
1o#
1P$
1n
1:"
1d"
1E
11#
1[#
1'$
1<$
1Z
1&"
1P"
b110 (
b1010101001010101 $
b1010101001010101 )
b101010110101010 %
b101010110101010 *
#700
0#
#750
1#
#760
1l"
1q"
1c"
1W"
1N"
1B"
1G"
19"
1-"
1$"
1v
1{
1m
1a
1X
1X$
1]$
1O$
1C$
1:$
1.$
1%$
1w#
1|#
1n#
1b#
1Y#
1M#
1R#
1D#
18#
1/#
1##
1(#
1x"
b1111111111111111 -
1L
14
xS
1Q
x?#
1=#
xi#
1g#
x5$
13$
xJ$
1H$
xh
1f
x4"
12"
x^"
1\"
15
1D
10#
1Z#
1&$
1;$
1Y
1%"
1O"
10
0E
01#
0[#
0'$
0<$
0Z
0&"
0P"
b111 (
b1111111111111111 $
b1111111111111111 )
b1 %
b1 *
#800
0#
#850
1#
#860
xx"
x/#
xD#
xY#
xn#
x%$
x:$
xO$
xX
xm
x$"
x9"
xN"
xc"
xL
x##
x8#
xM#
xb#
xw#
x.$
xC$
xX$
xa
xv
x-"
xB"
xW"
bx1 -
xl"
0S
0Q
0*#
0(#
0?#
0=#
0T#
0R#
0i#
0g#
0~#
0|#
05$
03$
0J$
0H$
0_$
0]$
0h
0f
0}
0{
04"
02"
0I"
0G"
0^"
0\"
0s"
0q"
0h"
0D
0y"
00#
0E#
0Z#
0o#
0&$
0;$
0P$
0Y
0n
0%"
0:"
0O"
0d"
1E
1z"
11#
1F#
1[#
1p#
1'$
1<$
1Q$
1Z
1o
1&"
1;"
1P"
b1000 (
b1 $
b1 )
b111111111111111 %
b111111111111111 *
#900
0#
#950
1#
#960
0l"
0u"
0r"
0c"
0W"
0`"
0]"
0N"
0B"
0K"
0H"
09"
0-"
06"
03"
0$"
0v
0!"
0|
0m
0a
0j
0g
0X
0X$
0a$
0^$
0O$
0C$
0L$
0I$
0:$
0.$
07$
04$
0%$
0w#
0"$
0}#
0n#
0b#
0k#
0h#
0Y#
0M#
0V#
0S#
0D#
08#
0A#
0>#
0/#
0##
0,#
0)#
0x"
0L
0U
0R
0C
0@
b0 -
07
0=
04
06
0K
0`
0u
0,"
0A"
0V"
0k"
0"#
07#
0L#
0a#
0v#
0-$
0B$
b0 "
b0 ,
0W$
0>
0<
05
03
0H
0}"
04#
0I#
0^#
0s#
0*$
0?$
0T$
0]
0r
0)"
0>"
0S"
0.
08
0A
1B
0M
0V
1W
0b
0k
1l
0w
0""
1#"
0."
07"
18"
0C"
0L"
1M"
0X"
0a"
1b"
0m"
0v"
1w"
0$#
0-#
1.#
09#
0B#
1C#
0N#
0W#
1X#
0c#
0l#
1m#
0x#
0#$
1$$
0/$
08$
19$
0D$
0M$
1N$
0Y$
0b$
1c$
0/
00
0E
0z"
01#
0F#
0[#
0p#
0'$
0<$
0Q$
0Z
0o
0&"
0;"
0P"
b1001 (
b10 &
b10 +
b10 1
b10 F
b10 [
b10 p
b10 '"
b10 <"
b10 Q"
b10 f"
b10 {"
b10 2#
b10 G#
b10 \#
b10 q#
b10 ($
b10 =$
b10 R$
b0 $
b0 )
b0 %
b0 *
#1000
0#
#1050
1#
#1060
x^$
x]$
xO$
xC$
xL$
x)#
x(#
xS#
xR#
x}#
x|#
xI$
x|
x{
xH"
xG"
xr"
xq"
xx"
xD#
xn#
x:$
xm
x9"
xc"
xL
x8#
xb#
x.$
xa
x-"
xW"
xU
xA#
xk#
x7$
xj
x6"
x`"
xR
x>#
xh#
x4$
xg
x3"
x]"
xC
x/#
xY#
x%$
xX
x$"
xN"
x7
16
x##
1"#
xM#
1L#
xw#
1v#
xX$
1W$
xv
1u
xB"
1A"
bx -
xl"
1k"
1K
17#
1a#
1-$
1B$
1`
1,"
b1111111111111111 "
b1111111111111111 ,
1V"
x@
14
x,#
1~"
xV#
1J#
x"$
1t#
xa$
1U$
x!"
1s
xK"
1?"
xu"
1i"
1I
15#
1_#
1+$
1@$
1^
1*"
1T"
x>
13
x*#
1}"
xT#
1I#
x~#
1s#
x_$
1T$
x}
1r
xI"
1>"
xs"
1h"
1H
14#
1^#
1*$
1?$
1]
1)"
1S"
1/
1y"
1E#
1o#
1P$
1n
1:"
1d"
1E
11#
1[#
1'$
1<$
1Z
1&"
1P"
b1010 (
b1010101001010101 $
b1010101001010101 )
b101010110101010 %
b101010110101010 *
#1100
0#
#1150
1#
#1160
xS
xQ
x?#
x=#
xi#
xg#
x5$
x3$
xJ$
xH$
xh
xf
x4"
x2"
x^"
x\"
15
1D
10#
1Z#
1&$
1;$
1Y
1%"
1O"
10
0E
01#
0[#
0'$
0<$
0Z
0&"
0P"
b1011 (
b1111111111111111 $
b1111111111111111 )
b1 %
b1 *
#1200
0#
#1250
1#
#1260
b111111111111111 "
b111111111111111 ,
0k"
0i"
0S
0Q
0*#
0(#
0?#
0=#
0T#
0R#
0i#
0g#
0~#
0|#
05$
03$
0J$
0H$
0_$
0]$
0h
0f
0}
0{
04"
02"
0I"
0G"
0^"
0\"
0s"
0q"
0h"
0D
0y"
00#
0E#
0Z#
0o#
0&$
0;$
0P$
0Y
0n
0%"
0:"
0O"
0d"
1E
1z"
11#
1F#
1[#
1p#
1'$
1<$
1Q$
1Z
1o
1&"
1;"
1P"
b1100 (
b1 $
b1 )
b111111111111111 %
b111111111111111 *
#1300
0#
#1350
1#
#1360
06
0K
0`
0u
0,"
0A"
0V"
0"#
07#
0L#
0a#
0v#
0-$
0B$
b0 "
b0 ,
0W$
x=
04
0I
0^
0s
0*"
0?"
0T"
0~"
05#
0J#
0_#
0t#
0+$
0@$
0U$
0>
05
03
0H
0}"
04#
0I#
0^#
0s#
0*$
0?$
0T$
0]
0r
0)"
0>"
0S"
1.
18
1A
1M
1V
1b
1k
1w
1""
1."
17"
1C"
1L"
1X"
1a"
1m"
1v"
1$#
1-#
19#
1B#
1N#
1W#
1c#
1l#
1x#
1#$
1/$
18$
1D$
1M$
1Y$
1b$
0/
00
0E
0z"
01#
0F#
0[#
0p#
0'$
0<$
0Q$
0Z
0o
0&"
0;"
0P"
b1101 (
b11 &
b11 +
b11 1
b11 F
b11 [
b11 p
b11 '"
b11 <"
b11 Q"
b11 f"
b11 {"
b11 2#
b11 G#
b11 \#
b11 q#
b11 ($
b11 =$
b11 R$
b0 $
b0 )
b0 %
b0 *
#1400
0#
#1450
1#
#1460
1C
bx1 -
17
x>
1<
13
x*#
x(#
1}"
xT#
xR#
1I#
x~#
x|#
1s#
x_$
x]$
1T$
x}
x{
1r
xI"
xG"
1>"
xs"
xq"
1h"
1H
14#
1^#
1*$
1?$
1]
1)"
1S"
1/
1y"
1E#
1o#
1P$
1n
1:"
1d"
1E
11#
1[#
1'$
1<$
1Z
1&"
1P"
b1110 (
b1010101001010101 $
b1010101001010101 )
b101010110101010 %
b101010110101010 *
#1500
0#
#1550
1#
#1560
1l"
1q"
1c"
1W"
1N"
1B"
1G"
19"
1-"
1$"
1v
1{
1m
1a
1X
1X$
1]$
1O$
1C$
1:$
1.$
1%$
1w#
1|#
1n#
1b#
1Y#
1M#
1R#
1D#
18#
1/#
1##
1(#
1x"
b1 "
b1 ,
16
b1111111111111111 -
1L
14
xS
1Q
x?#
1=#
xi#
1g#
x5$
13$
xJ$
1H$
xh
1f
x4"
12"
x^"
1\"
15
1D
10#
1Z#
1&$
1;$
1Y
1%"
1O"
10
0E
01#
0[#
0'$
0<$
0Z
0&"
0P"
b1111 (
b1111111111111111 $
b1111111111111111 )
b1 %
b1 *
#1600
0#
#1650
1#
#1660
xx"
x/#
xD#
xY#
xn#
x%$
x:$
xO$
xX
xm
x$"
x9"
xN"
xc"
xL
x##
x8#
xM#
xb#
xw#
x.$
xC$
xX$
xa
xv
x-"
xB"
xW"
bx1 -
xl"
0S
0Q
0*#
0(#
0?#
0=#
0T#
0R#
0i#
0g#
0~#
0|#
05$
03$
0J$
0H$
0_$
0]$
0h
0f
0}
0{
04"
02"
0I"
0G"
0^"
0\"
0s"
0q"
0h"
0D
0y"
00#
0E#
0Z#
0o#
0&$
0;$
0P$
0Y
0n
0%"
0:"
0O"
0d"
1E
1z"
11#
1F#
1[#
1p#
1'$
1<$
1Q$
1Z
1o
1&"
1;"
1P"
b10000 (
b1 $
b1 )
b111111111111111 %
b111111111111111 *
#1700
0#
#1750
1#
#1800
0#
#1850
1#
#1900
0#
#1950
1#
#2000
0#
#2050
1#
#2100
0#
#2150
1#
#2200
0#
#2250
1#
#2300
0#
#2350
1#
#2400
0#
#2450
1#
#2500
0#
#2550
1#
#2600
0#
#2650
1#
#2660
